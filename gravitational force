import pygame
import sys
import math

WIDTH, HEIGHT = 1800, 1000

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
YELLOW = (10, 50, 100)
BLUE = (0, 0, 255)

G = 5e-3

class Particle:
    def __init__(self, x, y, mass, vx=0, vy=0):
        self.x = x
        self.y = y
        self.mass = mass
        self.vx = vx
        self.vy = vy

    def apply_force(self, force):
        ax = force[0] / self.mass
        ay = force[1] / self.mass
        self.vx += ax
        self.vy += ay

    def update(self):
        self.x += self.vx
        self.y += self.vy

    def draw(self, screen, color, radius):
        pygame.draw.circle(screen, color, (int(self.x), int(self.y)), radius)

def calculate_gravity(p1, p2):
    dx = p2.x - p1.x
    dy = p2.y - p1.y
    distance_squared = dx**2 + dy**2
    distance = math.sqrt(distance_squared)
    if distance_squared == 0:
        return (0, 0)
    force_magnitude = -G * (p1.mass * p2.mass) / distance_squared
    force_x = force_magnitude * dx / distance
    force_y = force_magnitude * dy / distance
    return (force_x, force_y)

def draw_gravitational_field(screen, particles):
    for particle in particles:
        for angle in range(0, 360, 15):  # Draw field lines at intervals of 15 degrees
            angle_rad = math.radians(angle)
            x = particle.x + math.cos(angle_rad) * 100
            y = particle.y + math.sin(angle_rad) * 100
            force = calculate_gravity(particle, Particle(x, y, 1))
            force_magnitude = math.sqrt(force[0]**2 + force[1]**2)
            if force_magnitude > 0:
                force_dir_x = force[0] / force_magnitude
                force_dir_y = force[1] / force_magnitude
                end_x = particle.x + force_dir_x * 30  # Scale factor for visualization
                end_y = particle.y + force_dir_y * 30
                pygame.draw.line(screen, BLUE, (particle.x, particle.y), (end_x, end_y), 2)

def main():
    pygame.init()
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption("Black Hole Simulation")

    black_hole = Particle(WIDTH // 2, HEIGHT // 2, 1e6, 0, 0)  # 1e6 = 1000000

    particles = [
        Particle(WIDTH // 2 + 150, HEIGHT // 2, 1e3, 0, 6),  # 1e3 = 1000
        Particle(WIDTH // 2 - 250, HEIGHT // 2, 2e3, 1, 3),
        Particle(WIDTH // 2 + 200, HEIGHT // 2, 1e3, 3, -5),
        
        Particle(WIDTH // 2 + 300, HEIGHT // 2, 1e3, 0.5, 0.5)
    ]

    clock = pygame.time.Clock()

    while True:
        screen.fill(WHITE)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        for particle in particles:
            gravity_force = calculate_gravity(black_hole, particle)
            particle.apply_force(gravity_force)

        particles = [particle for particle in particles if math.sqrt((particle.x - black_hole.x) ** 2 + (particle.y - black_hole.y) ** 2) > 60]

        for particle in particles:
            particle.update()

        black_hole.draw(screen, BLACK, 50)

        for particle in particles:
            particle.draw(screen, YELLOW, 15)

        draw_gravitational_field(screen, [black_hole] + particles)  # Draw the gravitational field

        pygame.display.flip()
        clock.tick(60)

if __name__ == "__main__":
    main()
